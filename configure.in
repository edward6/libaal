# Process this file with autoconf to produce a configure script.
AC_INIT(src/libaal.c)
AC_CANONICAL_HOST
AC_PREREQ(2.50)

AH_TEMPLATE([PACKAGE], [Define this to be the name of the package.])
AH_TEMPLATE([VERSION], [Define to the version of the package.])

AH_TEMPLATE([LIBAAL_MAX_INTERFACE_VERSION], [Define to the max interface version.])
AH_TEMPLATE([LIBAAL_MIN_INTERFACE_VERSION], [Define to the min interface version.])
AH_TEMPLATE([loff_t], [Define to loff_t])
AH_TEMPLATE([ENABLE_DEBUG], [Define for enable debug info.])
AH_TEMPLATE([ENABLE_MEMORY_MANAGER], [Define for enable simple memory manager.])

LIBAAL_MAJOR_VERSION=0
LIBAAL_MINOR_VERSION=4
LIBAAL_MICRO_VERSION=3

LIBAAL_INTERFACE_AGE=0
LIBAAL_BINARY_AGE=0
LIBAAL_VERSION=$LIBAAL_MAJOR_VERSION.$LIBAAL_MINOR_VERSION.$LIBAAL_MICRO_VERSION

LT_RELEASE=$LIBAAL_MAJOR_VERSION.$LIBAAL_MINOR_VERSION

LT_CURRENT=`expr $LIBAAL_MICRO_VERSION - $LIBAAL_INTERFACE_AGE`

LT_REVISION=$LIBAAL_INTERFACE_AGE

LT_AGE=`expr $LIBAAL_BINARY_AGE - $LIBAAL_INTERFACE_AGE`

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

PACKAGE=libaal
VERSION=$LIBAAL_VERSION

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AM_CONFIG_HEADER(config.h)

AC_DEFINE_UNQUOTED(LIBAAL_MAX_INTERFACE_VERSION, $LIBAAL_BINARY_AGE)
AC_DEFINE_UNQUOTED(LIBAAL_MIN_INTERFACE_VERSION, $LIBAAL_INTERFACE_AGE)

AM_ENABLE_SHARED

AC_ARG_ENABLE(debug, 
    [  --disable-debug                disable debug information in binaries [default=on]], , 
	enable_debug=yes
)

AC_ARG_ENABLE(Werror,
    [  --disable-Werror               disable build with gcc -Werror [default=on]], ,
	enable_Werror=yes
)

AC_ARG_ENABLE(stand_alone,
    [  --enable-stand-alone           enable build stand alone library [default=off]], ,
        enable_stand_alone=no
)

AC_ARG_ENABLE(memory_manager,
    [  --enable-memory-manager        enable memory manager in stand alone library [default=off]], ,
        enable_memory_manager=no
)

AC_ARG_ENABLE(print_functions,
    [  --enable-print-functions       enable printf functions in stand alone library [default=off]], ,
        enable_print_functions=no
)

AC_ARG_ENABLE(string_functions,
    [  --enable-string-functions      enable strncpy and friends in stand alone library [default=off]], ,
        enable_string_functions=no
)

AC_ARG_ENABLE(lru_functions,
    [  --enable-lru-functions         enable lru functions in stand alone library [default=off]], ,
        enable_lru_functions=no
)

# Checks for programs.
AC_PROG_CC

# Checks for libraries.

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([errno.h fcntl.h stdlib.h string.h sys/ioctl.h unistd.h])

AC_C_BIGENDIAN

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_STRUCT_TM

# Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_HEADER_STDC
AC_CHECK_FUNCS([memmove memset strchr strerror strpbrk strrchr])

CFLAGS=""
ALONE_CFLAGS=""
GENERIC_CFLAGS=""

dnl make libc threadsafe (not required for us for awhile, but useful other users of
dnl libaal)

GENERIC_CFLAGS="$GENERIC_CFLAGS -D_REENTRANT"

AC_SYS_LARGEFILE

if test -z "${ac_cv_sys_file_offset_bits}"; then
	AC_MSG_WARN(
Can't detect right _FILE_OFFSET_BITS. Will be forced to 64bit.)
	ac_cv_sys_file_offset_bits=64
fi

GENERIC_CFLAGS="$GENERIC_CFLAGS -D_FILE_OFFSET_BITS=${ac_cv_sys_file_offset_bits}"
AC_CHECK_SIZEOF(off_t, 64, [
	#include <stdio.h>
	#include <sys/types.h>
	#include <unistd.h>
])

AM_PROG_LIBTOOL

if test x$enable_stand_alone = xyes; then
    if test x$enable_memory_manager = xyes; then
	MEMORY_MANAGER_CFLAGS="-DENABLE_MEMORY_MANAGER"
    fi

    if test x$enable_print_functions = xyes; then
	PRINT_FUNCTIONS_CFLAGS="-DENABLE_PRINT_FUNCTIONS"
    fi

    if test x$enable_string_functions = xyes; then
	STRING_FUNCTIONS_CFLAGS="-DENABLE_STRING_FUNCTIONS"
    fi

    if test x$enable_lru_functions = xyes; then
	LRU_FUNCTIONS_CFLAGS="-DENABLE_LRU_FUNCTIONS"
    fi

    ALONE_CFLAGS="$ALONE_CFLAGS -Wl,-N -DENABLE_STAND_ALONE $MEMORY_MANAGER_CFLAGS \
$PRINT_FUNCTIONS_CFLAGS $STRING_FUNCTIONS_CFLAGS $LRU_FUNCTIONS_CFLAGS \ 
-fno-builtin -malign-jumps=1 -malign-loops=1 -malign-functions=1"
fi

if test x$enable_debug = xyes; then
    GENERIC_CFLAGS="$GENERIC_CFLAGS -O0 -g"
    ALONE_CFLAGS="$ALONE_CFLAGS -O0 -g"
else
    GENERIC_CFLAGS="$GENERIC_CFLAGS -O2"
    ALONE_CFLAGS="$ALONE_CFLAGS -Os"
fi

CFLAGS="$CFLAGS -W -Wall -Wno-unused"
if test x$enable_Werror = xyes; then
    CFLAGS="$CFLAGS -Werror"
fi

AM_CONDITIONAL(ENABLE_STAND_ALONE, test x$enable_stand_alone = xyes)
AM_CONDITIONAL(ENABLE_DEBUG, test x$enable_debug = xyes)

if test x$enable_debug = xyes; then
    AC_DEFINE(ENABLE_DEBUG)
fi

AC_SUBST(ALONE_CFLAGS)
AC_SUBST(GENERIC_CFLAGS)

AC_OUTPUT([
    Makefile
    include/Makefile
    include/aal/Makefile
    src/Makefile
])

echo
echo Type \'make\' to compile libaal

